package com.yzu.recruit.dataaccess.model.gen;

import java.util.ArrayList;
import java.util.List;

public class JobRequireEntityExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table jobrequire
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table jobrequire
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table jobrequire
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jobrequire
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public JobRequireEntityExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jobrequire
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jobrequire
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jobrequire
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jobrequire
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jobrequire
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jobrequire
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jobrequire
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jobrequire
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jobrequire
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jobrequire
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table jobrequire
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andJobrequireidIsNull() {
            addCriterion("JobRequireID is null");
            return (Criteria) this;
        }

        public Criteria andJobrequireidIsNotNull() {
            addCriterion("JobRequireID is not null");
            return (Criteria) this;
        }

        public Criteria andJobrequireidEqualTo(Integer value) {
            addCriterion("JobRequireID =", value, "jobrequireid");
            return (Criteria) this;
        }

        public Criteria andJobrequireidNotEqualTo(Integer value) {
            addCriterion("JobRequireID <>", value, "jobrequireid");
            return (Criteria) this;
        }

        public Criteria andJobrequireidGreaterThan(Integer value) {
            addCriterion("JobRequireID >", value, "jobrequireid");
            return (Criteria) this;
        }

        public Criteria andJobrequireidGreaterThanOrEqualTo(Integer value) {
            addCriterion("JobRequireID >=", value, "jobrequireid");
            return (Criteria) this;
        }

        public Criteria andJobrequireidLessThan(Integer value) {
            addCriterion("JobRequireID <", value, "jobrequireid");
            return (Criteria) this;
        }

        public Criteria andJobrequireidLessThanOrEqualTo(Integer value) {
            addCriterion("JobRequireID <=", value, "jobrequireid");
            return (Criteria) this;
        }

        public Criteria andJobrequireidIn(List<Integer> values) {
            addCriterion("JobRequireID in", values, "jobrequireid");
            return (Criteria) this;
        }

        public Criteria andJobrequireidNotIn(List<Integer> values) {
            addCriterion("JobRequireID not in", values, "jobrequireid");
            return (Criteria) this;
        }

        public Criteria andJobrequireidBetween(Integer value1, Integer value2) {
            addCriterion("JobRequireID between", value1, value2, "jobrequireid");
            return (Criteria) this;
        }

        public Criteria andJobrequireidNotBetween(Integer value1, Integer value2) {
            addCriterion("JobRequireID not between", value1, value2, "jobrequireid");
            return (Criteria) this;
        }

        public Criteria andJobrecruitidIsNull() {
            addCriterion("JobRecruitID is null");
            return (Criteria) this;
        }

        public Criteria andJobrecruitidIsNotNull() {
            addCriterion("JobRecruitID is not null");
            return (Criteria) this;
        }

        public Criteria andJobrecruitidEqualTo(Integer value) {
            addCriterion("JobRecruitID =", value, "jobrecruitid");
            return (Criteria) this;
        }

        public Criteria andJobrecruitidNotEqualTo(Integer value) {
            addCriterion("JobRecruitID <>", value, "jobrecruitid");
            return (Criteria) this;
        }

        public Criteria andJobrecruitidGreaterThan(Integer value) {
            addCriterion("JobRecruitID >", value, "jobrecruitid");
            return (Criteria) this;
        }

        public Criteria andJobrecruitidGreaterThanOrEqualTo(Integer value) {
            addCriterion("JobRecruitID >=", value, "jobrecruitid");
            return (Criteria) this;
        }

        public Criteria andJobrecruitidLessThan(Integer value) {
            addCriterion("JobRecruitID <", value, "jobrecruitid");
            return (Criteria) this;
        }

        public Criteria andJobrecruitidLessThanOrEqualTo(Integer value) {
            addCriterion("JobRecruitID <=", value, "jobrecruitid");
            return (Criteria) this;
        }

        public Criteria andJobrecruitidIn(List<Integer> values) {
            addCriterion("JobRecruitID in", values, "jobrecruitid");
            return (Criteria) this;
        }

        public Criteria andJobrecruitidNotIn(List<Integer> values) {
            addCriterion("JobRecruitID not in", values, "jobrecruitid");
            return (Criteria) this;
        }

        public Criteria andJobrecruitidBetween(Integer value1, Integer value2) {
            addCriterion("JobRecruitID between", value1, value2, "jobrecruitid");
            return (Criteria) this;
        }

        public Criteria andJobrecruitidNotBetween(Integer value1, Integer value2) {
            addCriterion("JobRecruitID not between", value1, value2, "jobrecruitid");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteIsNull() {
            addCriterion("MarkForDelete is null");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteIsNotNull() {
            addCriterion("MarkForDelete is not null");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteEqualTo(Boolean value) {
            addCriterion("MarkForDelete =", value, "markfordelete");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteNotEqualTo(Boolean value) {
            addCriterion("MarkForDelete <>", value, "markfordelete");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteGreaterThan(Boolean value) {
            addCriterion("MarkForDelete >", value, "markfordelete");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteGreaterThanOrEqualTo(Boolean value) {
            addCriterion("MarkForDelete >=", value, "markfordelete");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteLessThan(Boolean value) {
            addCriterion("MarkForDelete <", value, "markfordelete");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteLessThanOrEqualTo(Boolean value) {
            addCriterion("MarkForDelete <=", value, "markfordelete");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteIn(List<Boolean> values) {
            addCriterion("MarkForDelete in", values, "markfordelete");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteNotIn(List<Boolean> values) {
            addCriterion("MarkForDelete not in", values, "markfordelete");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteBetween(Boolean value1, Boolean value2) {
            addCriterion("MarkForDelete between", value1, value2, "markfordelete");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteNotBetween(Boolean value1, Boolean value2) {
            addCriterion("MarkForDelete not between", value1, value2, "markfordelete");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table jobrequire
     *
     * @mbggenerated do_not_delete_during_merge Wed Mar 19 22:59:50 CST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table jobrequire
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}