package com.yzu.recruit.dataaccess.model.gen;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class EducationEntityExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table education
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table education
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table education
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table education
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public EducationEntityExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table education
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table education
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table education
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table education
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table education
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table education
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table education
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table education
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table education
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table education
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table education
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andEducationidIsNull() {
            addCriterion("EducationID is null");
            return (Criteria) this;
        }

        public Criteria andEducationidIsNotNull() {
            addCriterion("EducationID is not null");
            return (Criteria) this;
        }

        public Criteria andEducationidEqualTo(Integer value) {
            addCriterion("EducationID =", value, "educationid");
            return (Criteria) this;
        }

        public Criteria andEducationidNotEqualTo(Integer value) {
            addCriterion("EducationID <>", value, "educationid");
            return (Criteria) this;
        }

        public Criteria andEducationidGreaterThan(Integer value) {
            addCriterion("EducationID >", value, "educationid");
            return (Criteria) this;
        }

        public Criteria andEducationidGreaterThanOrEqualTo(Integer value) {
            addCriterion("EducationID >=", value, "educationid");
            return (Criteria) this;
        }

        public Criteria andEducationidLessThan(Integer value) {
            addCriterion("EducationID <", value, "educationid");
            return (Criteria) this;
        }

        public Criteria andEducationidLessThanOrEqualTo(Integer value) {
            addCriterion("EducationID <=", value, "educationid");
            return (Criteria) this;
        }

        public Criteria andEducationidIn(List<Integer> values) {
            addCriterion("EducationID in", values, "educationid");
            return (Criteria) this;
        }

        public Criteria andEducationidNotIn(List<Integer> values) {
            addCriterion("EducationID not in", values, "educationid");
            return (Criteria) this;
        }

        public Criteria andEducationidBetween(Integer value1, Integer value2) {
            addCriterion("EducationID between", value1, value2, "educationid");
            return (Criteria) this;
        }

        public Criteria andEducationidNotBetween(Integer value1, Integer value2) {
            addCriterion("EducationID not between", value1, value2, "educationid");
            return (Criteria) this;
        }

        public Criteria andDegreeIsNull() {
            addCriterion("Degree is null");
            return (Criteria) this;
        }

        public Criteria andDegreeIsNotNull() {
            addCriterion("Degree is not null");
            return (Criteria) this;
        }

        public Criteria andDegreeEqualTo(String value) {
            addCriterion("Degree =", value, "degree");
            return (Criteria) this;
        }

        public Criteria andDegreeNotEqualTo(String value) {
            addCriterion("Degree <>", value, "degree");
            return (Criteria) this;
        }

        public Criteria andDegreeGreaterThan(String value) {
            addCriterion("Degree >", value, "degree");
            return (Criteria) this;
        }

        public Criteria andDegreeGreaterThanOrEqualTo(String value) {
            addCriterion("Degree >=", value, "degree");
            return (Criteria) this;
        }

        public Criteria andDegreeLessThan(String value) {
            addCriterion("Degree <", value, "degree");
            return (Criteria) this;
        }

        public Criteria andDegreeLessThanOrEqualTo(String value) {
            addCriterion("Degree <=", value, "degree");
            return (Criteria) this;
        }

        public Criteria andDegreeLike(String value) {
            addCriterion("Degree like", value, "degree");
            return (Criteria) this;
        }

        public Criteria andDegreeNotLike(String value) {
            addCriterion("Degree not like", value, "degree");
            return (Criteria) this;
        }

        public Criteria andDegreeIn(List<String> values) {
            addCriterion("Degree in", values, "degree");
            return (Criteria) this;
        }

        public Criteria andDegreeNotIn(List<String> values) {
            addCriterion("Degree not in", values, "degree");
            return (Criteria) this;
        }

        public Criteria andDegreeBetween(String value1, String value2) {
            addCriterion("Degree between", value1, value2, "degree");
            return (Criteria) this;
        }

        public Criteria andDegreeNotBetween(String value1, String value2) {
            addCriterion("Degree not between", value1, value2, "degree");
            return (Criteria) this;
        }

        public Criteria andGraduationdateIsNull() {
            addCriterion("GraduationDate is null");
            return (Criteria) this;
        }

        public Criteria andGraduationdateIsNotNull() {
            addCriterion("GraduationDate is not null");
            return (Criteria) this;
        }

        public Criteria andGraduationdateEqualTo(Date value) {
            addCriterion("GraduationDate =", value, "graduationdate");
            return (Criteria) this;
        }

        public Criteria andGraduationdateNotEqualTo(Date value) {
            addCriterion("GraduationDate <>", value, "graduationdate");
            return (Criteria) this;
        }

        public Criteria andGraduationdateGreaterThan(Date value) {
            addCriterion("GraduationDate >", value, "graduationdate");
            return (Criteria) this;
        }

        public Criteria andGraduationdateGreaterThanOrEqualTo(Date value) {
            addCriterion("GraduationDate >=", value, "graduationdate");
            return (Criteria) this;
        }

        public Criteria andGraduationdateLessThan(Date value) {
            addCriterion("GraduationDate <", value, "graduationdate");
            return (Criteria) this;
        }

        public Criteria andGraduationdateLessThanOrEqualTo(Date value) {
            addCriterion("GraduationDate <=", value, "graduationdate");
            return (Criteria) this;
        }

        public Criteria andGraduationdateIn(List<Date> values) {
            addCriterion("GraduationDate in", values, "graduationdate");
            return (Criteria) this;
        }

        public Criteria andGraduationdateNotIn(List<Date> values) {
            addCriterion("GraduationDate not in", values, "graduationdate");
            return (Criteria) this;
        }

        public Criteria andGraduationdateBetween(Date value1, Date value2) {
            addCriterion("GraduationDate between", value1, value2, "graduationdate");
            return (Criteria) this;
        }

        public Criteria andGraduationdateNotBetween(Date value1, Date value2) {
            addCriterion("GraduationDate not between", value1, value2, "graduationdate");
            return (Criteria) this;
        }

        public Criteria andMajorIsNull() {
            addCriterion("Major is null");
            return (Criteria) this;
        }

        public Criteria andMajorIsNotNull() {
            addCriterion("Major is not null");
            return (Criteria) this;
        }

        public Criteria andMajorEqualTo(String value) {
            addCriterion("Major =", value, "major");
            return (Criteria) this;
        }

        public Criteria andMajorNotEqualTo(String value) {
            addCriterion("Major <>", value, "major");
            return (Criteria) this;
        }

        public Criteria andMajorGreaterThan(String value) {
            addCriterion("Major >", value, "major");
            return (Criteria) this;
        }

        public Criteria andMajorGreaterThanOrEqualTo(String value) {
            addCriterion("Major >=", value, "major");
            return (Criteria) this;
        }

        public Criteria andMajorLessThan(String value) {
            addCriterion("Major <", value, "major");
            return (Criteria) this;
        }

        public Criteria andMajorLessThanOrEqualTo(String value) {
            addCriterion("Major <=", value, "major");
            return (Criteria) this;
        }

        public Criteria andMajorLike(String value) {
            addCriterion("Major like", value, "major");
            return (Criteria) this;
        }

        public Criteria andMajorNotLike(String value) {
            addCriterion("Major not like", value, "major");
            return (Criteria) this;
        }

        public Criteria andMajorIn(List<String> values) {
            addCriterion("Major in", values, "major");
            return (Criteria) this;
        }

        public Criteria andMajorNotIn(List<String> values) {
            addCriterion("Major not in", values, "major");
            return (Criteria) this;
        }

        public Criteria andMajorBetween(String value1, String value2) {
            addCriterion("Major between", value1, value2, "major");
            return (Criteria) this;
        }

        public Criteria andMajorNotBetween(String value1, String value2) {
            addCriterion("Major not between", value1, value2, "major");
            return (Criteria) this;
        }

        public Criteria andMajorrankingIsNull() {
            addCriterion("MajorRanking is null");
            return (Criteria) this;
        }

        public Criteria andMajorrankingIsNotNull() {
            addCriterion("MajorRanking is not null");
            return (Criteria) this;
        }

        public Criteria andMajorrankingEqualTo(String value) {
            addCriterion("MajorRanking =", value, "majorranking");
            return (Criteria) this;
        }

        public Criteria andMajorrankingNotEqualTo(String value) {
            addCriterion("MajorRanking <>", value, "majorranking");
            return (Criteria) this;
        }

        public Criteria andMajorrankingGreaterThan(String value) {
            addCriterion("MajorRanking >", value, "majorranking");
            return (Criteria) this;
        }

        public Criteria andMajorrankingGreaterThanOrEqualTo(String value) {
            addCriterion("MajorRanking >=", value, "majorranking");
            return (Criteria) this;
        }

        public Criteria andMajorrankingLessThan(String value) {
            addCriterion("MajorRanking <", value, "majorranking");
            return (Criteria) this;
        }

        public Criteria andMajorrankingLessThanOrEqualTo(String value) {
            addCriterion("MajorRanking <=", value, "majorranking");
            return (Criteria) this;
        }

        public Criteria andMajorrankingLike(String value) {
            addCriterion("MajorRanking like", value, "majorranking");
            return (Criteria) this;
        }

        public Criteria andMajorrankingNotLike(String value) {
            addCriterion("MajorRanking not like", value, "majorranking");
            return (Criteria) this;
        }

        public Criteria andMajorrankingIn(List<String> values) {
            addCriterion("MajorRanking in", values, "majorranking");
            return (Criteria) this;
        }

        public Criteria andMajorrankingNotIn(List<String> values) {
            addCriterion("MajorRanking not in", values, "majorranking");
            return (Criteria) this;
        }

        public Criteria andMajorrankingBetween(String value1, String value2) {
            addCriterion("MajorRanking between", value1, value2, "majorranking");
            return (Criteria) this;
        }

        public Criteria andMajorrankingNotBetween(String value1, String value2) {
            addCriterion("MajorRanking not between", value1, value2, "majorranking");
            return (Criteria) this;
        }

        public Criteria andAcademyIsNull() {
            addCriterion("Academy is null");
            return (Criteria) this;
        }

        public Criteria andAcademyIsNotNull() {
            addCriterion("Academy is not null");
            return (Criteria) this;
        }

        public Criteria andAcademyEqualTo(String value) {
            addCriterion("Academy =", value, "academy");
            return (Criteria) this;
        }

        public Criteria andAcademyNotEqualTo(String value) {
            addCriterion("Academy <>", value, "academy");
            return (Criteria) this;
        }

        public Criteria andAcademyGreaterThan(String value) {
            addCriterion("Academy >", value, "academy");
            return (Criteria) this;
        }

        public Criteria andAcademyGreaterThanOrEqualTo(String value) {
            addCriterion("Academy >=", value, "academy");
            return (Criteria) this;
        }

        public Criteria andAcademyLessThan(String value) {
            addCriterion("Academy <", value, "academy");
            return (Criteria) this;
        }

        public Criteria andAcademyLessThanOrEqualTo(String value) {
            addCriterion("Academy <=", value, "academy");
            return (Criteria) this;
        }

        public Criteria andAcademyLike(String value) {
            addCriterion("Academy like", value, "academy");
            return (Criteria) this;
        }

        public Criteria andAcademyNotLike(String value) {
            addCriterion("Academy not like", value, "academy");
            return (Criteria) this;
        }

        public Criteria andAcademyIn(List<String> values) {
            addCriterion("Academy in", values, "academy");
            return (Criteria) this;
        }

        public Criteria andAcademyNotIn(List<String> values) {
            addCriterion("Academy not in", values, "academy");
            return (Criteria) this;
        }

        public Criteria andAcademyBetween(String value1, String value2) {
            addCriterion("Academy between", value1, value2, "academy");
            return (Criteria) this;
        }

        public Criteria andAcademyNotBetween(String value1, String value2) {
            addCriterion("Academy not between", value1, value2, "academy");
            return (Criteria) this;
        }

        public Criteria andUseridIsNull() {
            addCriterion("UserID is null");
            return (Criteria) this;
        }

        public Criteria andUseridIsNotNull() {
            addCriterion("UserID is not null");
            return (Criteria) this;
        }

        public Criteria andUseridEqualTo(Integer value) {
            addCriterion("UserID =", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotEqualTo(Integer value) {
            addCriterion("UserID <>", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThan(Integer value) {
            addCriterion("UserID >", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThanOrEqualTo(Integer value) {
            addCriterion("UserID >=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThan(Integer value) {
            addCriterion("UserID <", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThanOrEqualTo(Integer value) {
            addCriterion("UserID <=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridIn(List<Integer> values) {
            addCriterion("UserID in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotIn(List<Integer> values) {
            addCriterion("UserID not in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridBetween(Integer value1, Integer value2) {
            addCriterion("UserID between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotBetween(Integer value1, Integer value2) {
            addCriterion("UserID not between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteIsNull() {
            addCriterion("MarkForDelete is null");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteIsNotNull() {
            addCriterion("MarkForDelete is not null");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteEqualTo(Integer value) {
            addCriterion("MarkForDelete =", value, "markfordelete");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteNotEqualTo(Integer value) {
            addCriterion("MarkForDelete <>", value, "markfordelete");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteGreaterThan(Integer value) {
            addCriterion("MarkForDelete >", value, "markfordelete");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteGreaterThanOrEqualTo(Integer value) {
            addCriterion("MarkForDelete >=", value, "markfordelete");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteLessThan(Integer value) {
            addCriterion("MarkForDelete <", value, "markfordelete");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteLessThanOrEqualTo(Integer value) {
            addCriterion("MarkForDelete <=", value, "markfordelete");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteIn(List<Integer> values) {
            addCriterion("MarkForDelete in", values, "markfordelete");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteNotIn(List<Integer> values) {
            addCriterion("MarkForDelete not in", values, "markfordelete");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteBetween(Integer value1, Integer value2) {
            addCriterion("MarkForDelete between", value1, value2, "markfordelete");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteNotBetween(Integer value1, Integer value2) {
            addCriterion("MarkForDelete not between", value1, value2, "markfordelete");
            return (Criteria) this;
        }

        public Criteria andNumIsNull() {
            addCriterion("Num is null");
            return (Criteria) this;
        }

        public Criteria andNumIsNotNull() {
            addCriterion("Num is not null");
            return (Criteria) this;
        }

        public Criteria andNumEqualTo(Integer value) {
            addCriterion("Num =", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumNotEqualTo(Integer value) {
            addCriterion("Num <>", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumGreaterThan(Integer value) {
            addCriterion("Num >", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("Num >=", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumLessThan(Integer value) {
            addCriterion("Num <", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumLessThanOrEqualTo(Integer value) {
            addCriterion("Num <=", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumIn(List<Integer> values) {
            addCriterion("Num in", values, "num");
            return (Criteria) this;
        }

        public Criteria andNumNotIn(List<Integer> values) {
            addCriterion("Num not in", values, "num");
            return (Criteria) this;
        }

        public Criteria andNumBetween(Integer value1, Integer value2) {
            addCriterion("Num between", value1, value2, "num");
            return (Criteria) this;
        }

        public Criteria andNumNotBetween(Integer value1, Integer value2) {
            addCriterion("Num not between", value1, value2, "num");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table education
     *
     * @mbggenerated do_not_delete_during_merge Wed Mar 19 22:59:50 CST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table education
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}