package com.yzu.recruit.dataaccess.model.gen;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class JobRequestEntityExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table jobrequest
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table jobrequest
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table jobrequest
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jobrequest
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public JobRequestEntityExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jobrequest
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jobrequest
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jobrequest
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jobrequest
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jobrequest
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jobrequest
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jobrequest
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jobrequest
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jobrequest
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jobrequest
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table jobrequest
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andJobrequestidIsNull() {
            addCriterion("JobRequestID is null");
            return (Criteria) this;
        }

        public Criteria andJobrequestidIsNotNull() {
            addCriterion("JobRequestID is not null");
            return (Criteria) this;
        }

        public Criteria andJobrequestidEqualTo(Integer value) {
            addCriterion("JobRequestID =", value, "jobrequestid");
            return (Criteria) this;
        }

        public Criteria andJobrequestidNotEqualTo(Integer value) {
            addCriterion("JobRequestID <>", value, "jobrequestid");
            return (Criteria) this;
        }

        public Criteria andJobrequestidGreaterThan(Integer value) {
            addCriterion("JobRequestID >", value, "jobrequestid");
            return (Criteria) this;
        }

        public Criteria andJobrequestidGreaterThanOrEqualTo(Integer value) {
            addCriterion("JobRequestID >=", value, "jobrequestid");
            return (Criteria) this;
        }

        public Criteria andJobrequestidLessThan(Integer value) {
            addCriterion("JobRequestID <", value, "jobrequestid");
            return (Criteria) this;
        }

        public Criteria andJobrequestidLessThanOrEqualTo(Integer value) {
            addCriterion("JobRequestID <=", value, "jobrequestid");
            return (Criteria) this;
        }

        public Criteria andJobrequestidIn(List<Integer> values) {
            addCriterion("JobRequestID in", values, "jobrequestid");
            return (Criteria) this;
        }

        public Criteria andJobrequestidNotIn(List<Integer> values) {
            addCriterion("JobRequestID not in", values, "jobrequestid");
            return (Criteria) this;
        }

        public Criteria andJobrequestidBetween(Integer value1, Integer value2) {
            addCriterion("JobRequestID between", value1, value2, "jobrequestid");
            return (Criteria) this;
        }

        public Criteria andJobrequestidNotBetween(Integer value1, Integer value2) {
            addCriterion("JobRequestID not between", value1, value2, "jobrequestid");
            return (Criteria) this;
        }

        public Criteria andStatuschangetimeIsNull() {
            addCriterion("StatusChangeTime is null");
            return (Criteria) this;
        }

        public Criteria andStatuschangetimeIsNotNull() {
            addCriterion("StatusChangeTime is not null");
            return (Criteria) this;
        }

        public Criteria andStatuschangetimeEqualTo(Date value) {
            addCriterion("StatusChangeTime =", value, "statuschangetime");
            return (Criteria) this;
        }

        public Criteria andStatuschangetimeNotEqualTo(Date value) {
            addCriterion("StatusChangeTime <>", value, "statuschangetime");
            return (Criteria) this;
        }

        public Criteria andStatuschangetimeGreaterThan(Date value) {
            addCriterion("StatusChangeTime >", value, "statuschangetime");
            return (Criteria) this;
        }

        public Criteria andStatuschangetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("StatusChangeTime >=", value, "statuschangetime");
            return (Criteria) this;
        }

        public Criteria andStatuschangetimeLessThan(Date value) {
            addCriterion("StatusChangeTime <", value, "statuschangetime");
            return (Criteria) this;
        }

        public Criteria andStatuschangetimeLessThanOrEqualTo(Date value) {
            addCriterion("StatusChangeTime <=", value, "statuschangetime");
            return (Criteria) this;
        }

        public Criteria andStatuschangetimeIn(List<Date> values) {
            addCriterion("StatusChangeTime in", values, "statuschangetime");
            return (Criteria) this;
        }

        public Criteria andStatuschangetimeNotIn(List<Date> values) {
            addCriterion("StatusChangeTime not in", values, "statuschangetime");
            return (Criteria) this;
        }

        public Criteria andStatuschangetimeBetween(Date value1, Date value2) {
            addCriterion("StatusChangeTime between", value1, value2, "statuschangetime");
            return (Criteria) this;
        }

        public Criteria andStatuschangetimeNotBetween(Date value1, Date value2) {
            addCriterion("StatusChangeTime not between", value1, value2, "statuschangetime");
            return (Criteria) this;
        }

        public Criteria andAuditiontimeIsNull() {
            addCriterion("AuditionTime is null");
            return (Criteria) this;
        }

        public Criteria andAuditiontimeIsNotNull() {
            addCriterion("AuditionTime is not null");
            return (Criteria) this;
        }

        public Criteria andAuditiontimeEqualTo(Date value) {
            addCriterion("AuditionTime =", value, "auditiontime");
            return (Criteria) this;
        }

        public Criteria andAuditiontimeNotEqualTo(Date value) {
            addCriterion("AuditionTime <>", value, "auditiontime");
            return (Criteria) this;
        }

        public Criteria andAuditiontimeGreaterThan(Date value) {
            addCriterion("AuditionTime >", value, "auditiontime");
            return (Criteria) this;
        }

        public Criteria andAuditiontimeGreaterThanOrEqualTo(Date value) {
            addCriterion("AuditionTime >=", value, "auditiontime");
            return (Criteria) this;
        }

        public Criteria andAuditiontimeLessThan(Date value) {
            addCriterion("AuditionTime <", value, "auditiontime");
            return (Criteria) this;
        }

        public Criteria andAuditiontimeLessThanOrEqualTo(Date value) {
            addCriterion("AuditionTime <=", value, "auditiontime");
            return (Criteria) this;
        }

        public Criteria andAuditiontimeIn(List<Date> values) {
            addCriterion("AuditionTime in", values, "auditiontime");
            return (Criteria) this;
        }

        public Criteria andAuditiontimeNotIn(List<Date> values) {
            addCriterion("AuditionTime not in", values, "auditiontime");
            return (Criteria) this;
        }

        public Criteria andAuditiontimeBetween(Date value1, Date value2) {
            addCriterion("AuditionTime between", value1, value2, "auditiontime");
            return (Criteria) this;
        }

        public Criteria andAuditiontimeNotBetween(Date value1, Date value2) {
            addCriterion("AuditionTime not between", value1, value2, "auditiontime");
            return (Criteria) this;
        }

        public Criteria andAuditionrespondtimeIsNull() {
            addCriterion("AuditionRespondTime is null");
            return (Criteria) this;
        }

        public Criteria andAuditionrespondtimeIsNotNull() {
            addCriterion("AuditionRespondTime is not null");
            return (Criteria) this;
        }

        public Criteria andAuditionrespondtimeEqualTo(Date value) {
            addCriterion("AuditionRespondTime =", value, "auditionrespondtime");
            return (Criteria) this;
        }

        public Criteria andAuditionrespondtimeNotEqualTo(Date value) {
            addCriterion("AuditionRespondTime <>", value, "auditionrespondtime");
            return (Criteria) this;
        }

        public Criteria andAuditionrespondtimeGreaterThan(Date value) {
            addCriterion("AuditionRespondTime >", value, "auditionrespondtime");
            return (Criteria) this;
        }

        public Criteria andAuditionrespondtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("AuditionRespondTime >=", value, "auditionrespondtime");
            return (Criteria) this;
        }

        public Criteria andAuditionrespondtimeLessThan(Date value) {
            addCriterion("AuditionRespondTime <", value, "auditionrespondtime");
            return (Criteria) this;
        }

        public Criteria andAuditionrespondtimeLessThanOrEqualTo(Date value) {
            addCriterion("AuditionRespondTime <=", value, "auditionrespondtime");
            return (Criteria) this;
        }

        public Criteria andAuditionrespondtimeIn(List<Date> values) {
            addCriterion("AuditionRespondTime in", values, "auditionrespondtime");
            return (Criteria) this;
        }

        public Criteria andAuditionrespondtimeNotIn(List<Date> values) {
            addCriterion("AuditionRespondTime not in", values, "auditionrespondtime");
            return (Criteria) this;
        }

        public Criteria andAuditionrespondtimeBetween(Date value1, Date value2) {
            addCriterion("AuditionRespondTime between", value1, value2, "auditionrespondtime");
            return (Criteria) this;
        }

        public Criteria andAuditionrespondtimeNotBetween(Date value1, Date value2) {
            addCriterion("AuditionRespondTime not between", value1, value2, "auditionrespondtime");
            return (Criteria) this;
        }

        public Criteria andAuditionscoreIsNull() {
            addCriterion("AuditionScore is null");
            return (Criteria) this;
        }

        public Criteria andAuditionscoreIsNotNull() {
            addCriterion("AuditionScore is not null");
            return (Criteria) this;
        }

        public Criteria andAuditionscoreEqualTo(Integer value) {
            addCriterion("AuditionScore =", value, "auditionscore");
            return (Criteria) this;
        }

        public Criteria andAuditionscoreNotEqualTo(Integer value) {
            addCriterion("AuditionScore <>", value, "auditionscore");
            return (Criteria) this;
        }

        public Criteria andAuditionscoreGreaterThan(Integer value) {
            addCriterion("AuditionScore >", value, "auditionscore");
            return (Criteria) this;
        }

        public Criteria andAuditionscoreGreaterThanOrEqualTo(Integer value) {
            addCriterion("AuditionScore >=", value, "auditionscore");
            return (Criteria) this;
        }

        public Criteria andAuditionscoreLessThan(Integer value) {
            addCriterion("AuditionScore <", value, "auditionscore");
            return (Criteria) this;
        }

        public Criteria andAuditionscoreLessThanOrEqualTo(Integer value) {
            addCriterion("AuditionScore <=", value, "auditionscore");
            return (Criteria) this;
        }

        public Criteria andAuditionscoreIn(List<Integer> values) {
            addCriterion("AuditionScore in", values, "auditionscore");
            return (Criteria) this;
        }

        public Criteria andAuditionscoreNotIn(List<Integer> values) {
            addCriterion("AuditionScore not in", values, "auditionscore");
            return (Criteria) this;
        }

        public Criteria andAuditionscoreBetween(Integer value1, Integer value2) {
            addCriterion("AuditionScore between", value1, value2, "auditionscore");
            return (Criteria) this;
        }

        public Criteria andAuditionscoreNotBetween(Integer value1, Integer value2) {
            addCriterion("AuditionScore not between", value1, value2, "auditionscore");
            return (Criteria) this;
        }

        public Criteria andUseridIsNull() {
            addCriterion("UserID is null");
            return (Criteria) this;
        }

        public Criteria andUseridIsNotNull() {
            addCriterion("UserID is not null");
            return (Criteria) this;
        }

        public Criteria andUseridEqualTo(Integer value) {
            addCriterion("UserID =", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotEqualTo(Integer value) {
            addCriterion("UserID <>", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThan(Integer value) {
            addCriterion("UserID >", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThanOrEqualTo(Integer value) {
            addCriterion("UserID >=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThan(Integer value) {
            addCriterion("UserID <", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThanOrEqualTo(Integer value) {
            addCriterion("UserID <=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridIn(List<Integer> values) {
            addCriterion("UserID in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotIn(List<Integer> values) {
            addCriterion("UserID not in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridBetween(Integer value1, Integer value2) {
            addCriterion("UserID between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotBetween(Integer value1, Integer value2) {
            addCriterion("UserID not between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andStatusidIsNull() {
            addCriterion("StatusID is null");
            return (Criteria) this;
        }

        public Criteria andStatusidIsNotNull() {
            addCriterion("StatusID is not null");
            return (Criteria) this;
        }

        public Criteria andStatusidEqualTo(Integer value) {
            addCriterion("StatusID =", value, "statusid");
            return (Criteria) this;
        }

        public Criteria andStatusidNotEqualTo(Integer value) {
            addCriterion("StatusID <>", value, "statusid");
            return (Criteria) this;
        }

        public Criteria andStatusidGreaterThan(Integer value) {
            addCriterion("StatusID >", value, "statusid");
            return (Criteria) this;
        }

        public Criteria andStatusidGreaterThanOrEqualTo(Integer value) {
            addCriterion("StatusID >=", value, "statusid");
            return (Criteria) this;
        }

        public Criteria andStatusidLessThan(Integer value) {
            addCriterion("StatusID <", value, "statusid");
            return (Criteria) this;
        }

        public Criteria andStatusidLessThanOrEqualTo(Integer value) {
            addCriterion("StatusID <=", value, "statusid");
            return (Criteria) this;
        }

        public Criteria andStatusidIn(List<Integer> values) {
            addCriterion("StatusID in", values, "statusid");
            return (Criteria) this;
        }

        public Criteria andStatusidNotIn(List<Integer> values) {
            addCriterion("StatusID not in", values, "statusid");
            return (Criteria) this;
        }

        public Criteria andStatusidBetween(Integer value1, Integer value2) {
            addCriterion("StatusID between", value1, value2, "statusid");
            return (Criteria) this;
        }

        public Criteria andStatusidNotBetween(Integer value1, Integer value2) {
            addCriterion("StatusID not between", value1, value2, "statusid");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteIsNull() {
            addCriterion("MarkForDelete is null");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteIsNotNull() {
            addCriterion("MarkForDelete is not null");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteEqualTo(Boolean value) {
            addCriterion("MarkForDelete =", value, "markfordelete");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteNotEqualTo(Boolean value) {
            addCriterion("MarkForDelete <>", value, "markfordelete");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteGreaterThan(Boolean value) {
            addCriterion("MarkForDelete >", value, "markfordelete");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteGreaterThanOrEqualTo(Boolean value) {
            addCriterion("MarkForDelete >=", value, "markfordelete");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteLessThan(Boolean value) {
            addCriterion("MarkForDelete <", value, "markfordelete");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteLessThanOrEqualTo(Boolean value) {
            addCriterion("MarkForDelete <=", value, "markfordelete");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteIn(List<Boolean> values) {
            addCriterion("MarkForDelete in", values, "markfordelete");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteNotIn(List<Boolean> values) {
            addCriterion("MarkForDelete not in", values, "markfordelete");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteBetween(Boolean value1, Boolean value2) {
            addCriterion("MarkForDelete between", value1, value2, "markfordelete");
            return (Criteria) this;
        }

        public Criteria andMarkfordeleteNotBetween(Boolean value1, Boolean value2) {
            addCriterion("MarkForDelete not between", value1, value2, "markfordelete");
            return (Criteria) this;
        }

        public Criteria andJobrecruitidIsNull() {
            addCriterion("JobRecruitID is null");
            return (Criteria) this;
        }

        public Criteria andJobrecruitidIsNotNull() {
            addCriterion("JobRecruitID is not null");
            return (Criteria) this;
        }

        public Criteria andJobrecruitidEqualTo(Integer value) {
            addCriterion("JobRecruitID =", value, "jobrecruitid");
            return (Criteria) this;
        }

        public Criteria andJobrecruitidNotEqualTo(Integer value) {
            addCriterion("JobRecruitID <>", value, "jobrecruitid");
            return (Criteria) this;
        }

        public Criteria andJobrecruitidGreaterThan(Integer value) {
            addCriterion("JobRecruitID >", value, "jobrecruitid");
            return (Criteria) this;
        }

        public Criteria andJobrecruitidGreaterThanOrEqualTo(Integer value) {
            addCriterion("JobRecruitID >=", value, "jobrecruitid");
            return (Criteria) this;
        }

        public Criteria andJobrecruitidLessThan(Integer value) {
            addCriterion("JobRecruitID <", value, "jobrecruitid");
            return (Criteria) this;
        }

        public Criteria andJobrecruitidLessThanOrEqualTo(Integer value) {
            addCriterion("JobRecruitID <=", value, "jobrecruitid");
            return (Criteria) this;
        }

        public Criteria andJobrecruitidIn(List<Integer> values) {
            addCriterion("JobRecruitID in", values, "jobrecruitid");
            return (Criteria) this;
        }

        public Criteria andJobrecruitidNotIn(List<Integer> values) {
            addCriterion("JobRecruitID not in", values, "jobrecruitid");
            return (Criteria) this;
        }

        public Criteria andJobrecruitidBetween(Integer value1, Integer value2) {
            addCriterion("JobRecruitID between", value1, value2, "jobrecruitid");
            return (Criteria) this;
        }

        public Criteria andJobrecruitidNotBetween(Integer value1, Integer value2) {
            addCriterion("JobRecruitID not between", value1, value2, "jobrecruitid");
            return (Criteria) this;
        }

        public Criteria andTimestampIsNull() {
            addCriterion("Timestamp is null");
            return (Criteria) this;
        }

        public Criteria andTimestampIsNotNull() {
            addCriterion("Timestamp is not null");
            return (Criteria) this;
        }

        public Criteria andTimestampEqualTo(Date value) {
            addCriterion("Timestamp =", value, "timestamp");
            return (Criteria) this;
        }

        public Criteria andTimestampNotEqualTo(Date value) {
            addCriterion("Timestamp <>", value, "timestamp");
            return (Criteria) this;
        }

        public Criteria andTimestampGreaterThan(Date value) {
            addCriterion("Timestamp >", value, "timestamp");
            return (Criteria) this;
        }

        public Criteria andTimestampGreaterThanOrEqualTo(Date value) {
            addCriterion("Timestamp >=", value, "timestamp");
            return (Criteria) this;
        }

        public Criteria andTimestampLessThan(Date value) {
            addCriterion("Timestamp <", value, "timestamp");
            return (Criteria) this;
        }

        public Criteria andTimestampLessThanOrEqualTo(Date value) {
            addCriterion("Timestamp <=", value, "timestamp");
            return (Criteria) this;
        }

        public Criteria andTimestampIn(List<Date> values) {
            addCriterion("Timestamp in", values, "timestamp");
            return (Criteria) this;
        }

        public Criteria andTimestampNotIn(List<Date> values) {
            addCriterion("Timestamp not in", values, "timestamp");
            return (Criteria) this;
        }

        public Criteria andTimestampBetween(Date value1, Date value2) {
            addCriterion("Timestamp between", value1, value2, "timestamp");
            return (Criteria) this;
        }

        public Criteria andTimestampNotBetween(Date value1, Date value2) {
            addCriterion("Timestamp not between", value1, value2, "timestamp");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table jobrequest
     *
     * @mbggenerated do_not_delete_during_merge Wed Mar 19 22:59:50 CST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table jobrequest
     *
     * @mbggenerated Wed Mar 19 22:59:50 CST 2014
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}